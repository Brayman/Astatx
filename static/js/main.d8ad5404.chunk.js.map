{"version":3,"sources":["redux/reducers/index.js","redux/reducers/statistic.js","redux/reducers/user.js","redux/reducers/appdata.js","redux/store.js","component/Form.js","component/Filter.js","component/SignIn.js","component/Auth.js","component/Table.js","redux/actions/stat.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","statistic","state","type","payload","orderBy","user","auth","profile","console","log","appdata","isLoading","warning","filter","store","createStore","rootReducer","applyMiddleware","thunk","Form","props","useState","date","prorate","buy","usd","byn","data","setData","className","onChange","e","target","value","increase","lastRate","onClick","dateNow","Date","default","getDate","getMonth","getUTCFullYear","full","rate","checked","disabled","parseInt","Math","trunc","action","login","Filter","filterAction","loc","useLocation","to","pathname","other","SignIn","actions","password","bank","EnterPass","name","email","passwordtrue","regAction","loginAction","Auth","Table","sum","price","srusd","map","arr","i","length","key","color","size","URL","setStat","stat","addStat","load","loadComp","getStat","url","dispatch","fetch","then","json","fetchStats","newStat","method","headers","body","JSON","stringify","res","FetchLogIn","post","undefined","error","loadFail","FetchRegData","Home","useEffect","search","lastElement","status","width","document","documentElement","clientWidth","height","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","stroke","activeDot","r","dot","connect","element","bindActionCreators","allActions","par","useParams","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d8ad5404.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport statistic from './statistic';\r\nimport user from './user';\r\nimport appdata from './appdata';\r\n\r\n\r\nexport default combineReducers({\r\n    statistic,\r\n    user,\r\n    appdata\r\n});","import orderBy from \"lodash/orderBy\";\r\nexport default (state = [], {type, payload}) => {\r\n    switch (type) {\r\n        case 'GET_STAT':            \r\n            return orderBy(payload, 'date', 'asc')\r\n        case 'ADD_STAT':\r\n            return [...state,payload]\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state = {auth: false, profile: {}}, {type, payload}) => {\r\n    switch (type) {\r\n        case 'LOGIN':\r\n            console.log('work');\r\n            return {auth: true, profile: payload};\r\n        case 'LOGOUT':\r\n            return {auth: false, profile: {}};\r\n        default:\r\n            return state;\r\n    }\r\n}","export default (state = {isLoading: true}, {type, payload}) => {\r\n    switch (type) {\r\n        case 'LOADING':\r\n            return {...state,isLoading: payload};\r\n        case 'LOADING_COMPLEATE':\r\n            return {...state,isLoading: payload};\r\n        case 'LOADING_FAIL':\r\n            return {...state,isLoading: false, warning: payload};\r\n        case 'FILTER':\r\n            return {...state,filter: payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport default store;","import React, {useState} from 'react';\r\n\r\nfunction Form(props, user) {\r\n    const [data, setData] = useState({date:{},\r\n    prorate: 0,\r\n    buy: false,\r\n    usd: 0,\r\n    byn: 0\r\n})\r\n    const ProrateChange = (e) => {\r\n        console.log();\r\n        setData({\r\n            ...data,\r\n            rate: e.target.value\r\n        })\r\n    }\r\n    const RateChange = (e) => {\r\n        console.log();\r\n        setData({\r\n            ...data,\r\n            prorate: e.target.value,\r\n            increase: props.lastRate >= e.target.value ? false : true\r\n        })\r\n    }\r\n    const USDChange = (e) => {\r\n        setData({...data,\r\n            usd: parseInt(e.target.value),\r\n            byn: Math.trunc(e.target.value * 100 * data.prorate) /100,\r\n        })\r\n    }\r\n    const BuyChange = (e) => {\r\n        if (e.target.checked===false) {\r\n            setData({...data,buy:e.target.checked, usd:0, byn:0})\r\n        } else {\r\n            setData({...data,buy:e.target.checked})\r\n        }\r\n        \r\n    }\r\n    const setDate = (e) => {\r\n        const dateNow = new Date();\r\n        console.log(dateNow);\r\n        setData({\r\n            ...data,\r\n            date: {\r\n                default: dateNow.getDate()+'/'+ (dateNow.getMonth()+1)+'/'+dateNow.getUTCFullYear(),\r\n                full: dateNow\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"MyForm\">\r\n            <input type=\"number\" onChange={RateChange} onClick={setDate}/>\r\n            <input type=\"number\" onChange={ProrateChange} />\r\n            <div>\r\n                <input type=\"checkbox\" onChange={BuyChange}/> buy?\r\n            </div>\r\n            <input type=\"number\" disabled={!data.buy} value={data.usd} onChange={USDChange}/>\r\n            \r\n            <button onClick={()=>props.action(data, props.user.login)}>\r\n                Отправить\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport {\r\n    NavLink,\r\n    useLocation\r\n\r\n  } from \"react-router-dom\";\r\n\r\nfunction Filter({filterAction, login}) {\r\n    let loc = useLocation();\r\n    \r\n    return (\r\n        <div className='filter'>\r\n                <NavLink to={`${loc.pathname}`} className='button' onClick={()=>{\r\n                    filterAction({other:'', login: login})\r\n                }}>\r\n                    Все\r\n                </NavLink>\r\n                <NavLink to={`${loc.pathname}?filter=7`} className='button' onClick={()=>{\r\n                    filterAction({other:'?filter=7', login: login})\r\n                }}>\r\n                    Неделя\r\n                </NavLink>\r\n                <NavLink to={`${loc.pathname}?filter=30`} className='button' onClick={()=>{\r\n                    filterAction({other:'?filter=30', login: login})\r\n                }}>   Месяц\r\n                </NavLink>\r\n                <NavLink to={`${loc.pathname}?filter=90`} className='button' onClick={()=>filterAction({other:'?filter=90', login: login})}>\r\n                    3 Месяца\r\n                </NavLink>\r\n                <NavLink to={`${loc.pathname}?filter=120`} className='button' onClick={()=>filterAction({other:'?filter=120', login: login})}>\r\n                    6 Месяцев\r\n                </NavLink>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Filter;","import React, {useState} from 'react';\r\nimport { FiXCircle } from \"react-icons/fi\";\r\nimport '../css/SignIn.css';\r\n\r\nimport {\r\n    NavLink\r\n  } from \"react-router-dom\";\r\n\r\n function password(atr) {\r\n    if (!atr) {\r\n        return <FiXCircle className='wrong' />\r\n    } else {\r\n        return 'good'\r\n    }\r\n}\r\n\r\nfunction SignIn({actions}) {\r\n    const [data, setData] = useState({\r\n        login: '',\r\n        password: '',\r\n        bank: ''\r\n    })\r\n    const EnterPass = (e) => {\r\n        switch (e.target.name) {\r\n            case 'login':\r\n                setData({...data,login: e.target.value})\r\n                break;\r\n            case 'password':\r\n                setData({...data,password: e.target.value})\r\n                break;\r\n            case 'email':\r\n                console.log(e.target);\r\n                setData({...data,email: e.target.value})\r\n                break;\r\n            case 'bank':\r\n                setData({...data,bank: e.target.value})\r\n                break;\r\n            case 'repeatpassword':\r\n                if (data.password===e.target.value) {\r\n                    setData({...data,passwordtrue: true})\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className='MyForm'>\r\n            Login\r\n            <input type=\"text\" name='login' onChange={EnterPass} />\r\n            \r\n            Password\r\n            <input type=\"password\"  name='password' onChange={EnterPass} />\r\n            <div>\r\n                Repeat password\r\n                <input type=\"password\" name='repeatpassword' onChange={EnterPass}/> {password(data.passwordtrue)}\r\n            </div>\r\n            \r\n            Email\r\n            <input type=\"email\" name='email' onChange={EnterPass} />\r\n            Your bank\r\n            <input type=\"text\" name='bank' onChange={EnterPass}/>\r\n            \r\n            \r\n                <button className='button' onClick={() => actions.regAction(data)}>Зарегистрироваться</button>\r\n                <div>или</div>\r\n                <button className='button' onClick={() => actions.loginAction(data)}>войти</button>\r\n            \r\n       </div>\r\n    )\r\n} \r\n\r\nexport default SignIn;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    NavLink,\r\n    useLocation\r\n  } from \"react-router-dom\";\r\nimport { ImSortAmountAsc, ImSortAmountDesc } from \"react-icons/im\";\r\n\r\nfunction Auth() {\r\n    let match = useLocation();\r\n    console.log(match);\r\n    return (\r\n       <div>\r\n           you auth\r\n       </div>\r\n    )\r\n} \r\n\r\nexport default Auth;","import React from \"react\";\r\nimport { MdTrendingUp, MdTrendingDown, MdMoneyOff, MdAttachMoney } from \"react-icons/md\";\r\nimport { BiMessageSquareCheck, BiMessageSquareX } from \"react-icons/bi\";\r\n\r\n\r\n\r\nfunction Table({data}) {\r\n    var sum = {usd: 0, byn: 0, price: 0, srusd: 0};\r\n    data.map((arr, i) => {\r\n        if(arr.buy === true) {\r\n            \r\n            sum.usd = sum.usd + arr.usd\r\n            sum.byn = sum.byn + arr.byn\r\n            sum.price = sum.usd * data[data.length-1].prorate\r\n            sum.srusd = sum.usd / data.length\r\n            \r\n        }\r\n    })\r\n    const SimpleDate = (update) => {\r\n        const date = new Date(update);\r\n        const parseDate = date.getDate()+'/'+ (date.getMonth()+1)+'/'+date.getUTCFullYear();\r\n        return parseDate;\r\n    }\r\n    return (\r\n        <div className='table'>\r\n            <div className='row'>\r\n                <div className='column'>Купленно <MdAttachMoney/>\r\n                    {sum.usd} --- {sum.byn} --- {sum.price} --- {sum.srusd}\r\n                </div>\r\n            </div>\r\n            {data.map(\r\n                (arr, i)=>{\r\n                    return (\r\n                        <div className='row' key={i}>\r\n                            <div className='column'>{i+1})</div>\r\n                            <div className='column date'>{arr.date.default}</div>\r\n                            <div className='column'>{arr.increase ? <MdTrendingUp color={'#f44336'} size={'20px'}/> : <MdTrendingDown color={'#4CAF50'} size={'20px'}/>}</div>\r\n                            <div className='column'>{arr.prorate}</div>\r\n                            {arr.buy? <div className='column not-buy'><BiMessageSquareCheck color={'inherit'} size={'20px'}/></div> : <div className='column buy'><BiMessageSquareX color={'inherit'} size={'20px'}/></div>}\r\n                            {arr.buy ? <div className='column'><MdAttachMoney/> {arr.usd}</div> : <div className='column'><MdMoneyOff color={'#f44336'}/></div>}\r\n                            <div className='column byn'>{arr.buy ? arr.byn : <MdMoneyOff color={'#f44336'}/>}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default Table;","const URL = 'http://localhost:5000'\r\n// const URL = 'https://astatx.herokuapp.com'\r\nexport const setStat = (stat) => ({\r\n    type: 'GET_STAT',\r\n    payload: stat\r\n});\r\nexport const addStat = (stat) => ({\r\n    type: 'ADD_STAT',\r\n    payload: stat\r\n});\r\nexport const login = (stat) => ({\r\n  type: 'LOGIN',\r\n  payload: stat\r\n});\r\nexport const filter = (stat) => ({\r\n  type: 'FILTER',\r\n  payload: stat\r\n});\r\nexport const load = () => ({\r\n  type: 'LOADING',\r\n  payload: true\r\n});\r\nexport const loadComp = () => ({\r\n  type: 'LOADING_COMPLEATE',\r\n  payload: false\r\n});\r\nconst loadFail = (data) => ({\r\n  type: 'LOADING_FAIL',\r\n  payload: data\r\n})\r\nexport const getStat = (url) => dispatch => {\r\n  console.log(url);\r\n    fetch(URL+'/stat/'+url.login+url.other).then(( data ) => {\r\n        console.log(data);\r\n        dispatch(filter(url.other));\r\n        return data.json()\r\n    }).then(data => {\r\n      dispatch(setStat(data))\r\n      dispatch(loadComp())\r\n    })\r\n  }\r\nexport const fetchStats  = (newStat, login) => dispatch => {\r\n    fetch(URL+'/stat/'+login, {\r\n        method: 'PUT', // *GET, POST, , DELETE, etc.\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newStat)\r\n      }).then(res => {return res.json()})\r\n      .then(data => {\r\n        console.log(data);\r\n        dispatch(addStat(data))\r\n      }); \r\n    }\r\nexport const FetchLogIn  = (post) => dispatch => {\r\n  fetch(URL+'/login', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify(post)\r\n        }).then(res => { return res.json()})\r\n        .then(data => {\r\n          console.log(data);\r\n          data.error == undefined ? dispatch(login(data)) : dispatch(loadFail(data))\r\n          \r\n        }); \r\n      }    \r\nexport const FetchRegData  = (post) => dispatch => {\r\n  fetch(URL+'/auth', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify(post)\r\n    }).then(res => {return res.json()})\r\n    .then(data => {\r\n      console.log(data);\r\n      dispatch(FetchLogIn(data))\r\n    }); \r\n  }\r\n","import React, {useEffect} from 'react';\r\nimport Form from './component/Form';\r\nimport Filter from './component/Filter';\r\nimport SignIn from './component/SignIn';\r\nimport Auth from './component/Auth';\r\nimport Table from './component/Table';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n  useLocation,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport * as allActions  from '../src/redux/actions/stat';\r\nimport orderBy from \"lodash/orderBy\";\r\nimport './App.css';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\nimport {BiLoaderCircle } from \"react-icons/bi\";\r\n\r\n\r\nconst sortBy = (element, type) => { \r\n  return orderBy(element, 'date.full', 'asc');\r\n}\r\n\r\nfunction Home({props}) {\r\nlet loc = useLocation();\r\nuseEffect(() => {\r\n  props.getStat({login: props.user.profile.login, other: loc.search})\r\n},[]);\r\nconst lastElement = props.statistic.length > 0 ? props.statistic[props.statistic.length-1] : {prorate: 0}\r\n  return (\r\n    <div className=\"App\">\r\n      {props.appdata.isLoading==true ? <div className='loading'><BiLoaderCircle/></div> : null}\r\n      <Filter filterAction={props.getStat} login={props.user.profile.login} status={props.appdata.filter}/>\r\n      <LineChart\r\n        width={document.documentElement.clientWidth-50}\r\n        height={600}\r\n        data={props.statistic}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"4 4\" />\r\n        <XAxis dataKey=\"date.default\"/>\r\n        <YAxis domain={['dataMin', 'dataMax + 0.01']}/>\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"rate\" stroke=\"#4caf50\" activeDot={{ r: 3 }} dot={{ r: 0.5 }}/>\r\n        <Line type=\"monotone\" dataKey=\"prorate\" stroke=\"#f03226\" activeDot={{ r: 3 }} dot={{ r: 1 }} />\r\n        \r\n      </LineChart>\r\n      <Form action={props.fetchStats} user={props.user.profile} lastRate={lastElement.prorate}/>\r\n      <Table data={props.statistic}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction App(props) {\r\n  let par = useParams();\r\n  let loc = useLocation();\r\n  console.log(loc, par);\r\n  return (\r\n    <Switch>\r\n        <Route exact path={'/Astatx'}>\r\n          {props.user.auth==false ? <Redirect to='/Astatx/signin'/> :  <Home props={props} />}\r\n        </Route>\r\n        <Route exact path={'/Astatx/signin'}>\r\n          {props.user.auth==true ? <Redirect to={`/Astatx/${props.user.profile.login}`}/>:  <SignIn actions={{regAction: props.FetchRegData, loginAction: props.FetchLogIn}}/>}\r\n        </Route>\r\n        <Route exact path={'/Astatx/:login'}>\r\n          {props.user.profile.login==par.login ? <Redirect to='/Astatx/signin'/> :  <Home props={props} />}\r\n        </Route>\r\n        <Route path='*'>\r\n          <div>\r\n            not found\r\n          </div>\r\n        </Route>\r\n    </Switch>\r\n  )\r\n}\r\nconst mapState = state => ({\r\n  ...state,\r\n  statistic: sortBy(state.statistic),\r\n});\r\n  const mapDispatch = dispatch => ({\r\n    ...bindActionCreators(allActions, dispatch)\r\n    \r\n  });\r\nexport default connect(mapState, mapDispatch)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from './redux/store'\r\nimport {\r\n  BrowserRouter\r\n} from \"react-router-dom\";\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App/>\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}