{"version":3,"sources":["redux/reducers/index.js","redux/reducers/statistic.js","redux/store.js","component/Form.js","component/Table.js","redux/actions/stat.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","statistic","state","type","payload","store","createStore","rootReducer","applyMiddleware","thunk","Form","props","useState","date","prorate","buy","usd","byn","data","setData","className","onChange","e","console","log","target","value","increase","lastRate","onClick","dateNow","Date","rate","checked","disabled","Math","trunc","action","Table","sum","map","arr","i","key","color","size","URL","setStat","stat","addStat","getStat","dispatch","fetch","then","json","fetchStats","newStat","method","headers","body","JSON","stringify","res","Actions","connect","element","orderBy","bindActionCreators","statActions","useEffect","lastElement","length","width","document","documentElement","clientWidth","height","margin","top","right","left","bottom","strokeDasharray","dataKey","domain","stroke","activeDot","r","dot","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.303dc499.chunk.js","sourcesContent":["import {combineReducers} from 'redux';\r\nimport statistic from './statistic'\r\n\r\n\r\nexport default combineReducers({\r\n    statistic\r\n});","export default (state = [], {type, payload}) => {\r\n    switch (type) {\r\n        case 'GET_STAT':\r\n            return payload\r\n        case 'ADD_STAT':\r\n            return [...state,payload]    \r\n        \r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from './reducers'\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport default store;","import React, {useState} from 'react';\r\n\r\nfunction Form(props) {\r\n    const [data, setData] = useState({date:null,\r\n    prorate: 0,\r\n    buy: false,\r\n    usd: 0,\r\n    byn: 0\r\n})\r\n    const ProrateChange = (e) => {\r\n        console.log();\r\n        setData({\r\n            ...data,\r\n            rate: e.target.value\r\n        })\r\n    }\r\n    const RateChange = (e) => {\r\n        console.log();\r\n        setData({\r\n            ...data,\r\n            prorate: e.target.value,\r\n            increase: props.lastRate >= e.target.value ? false : true\r\n        })\r\n    }\r\n    const USDChange = (e) => {\r\n        setData({...data,\r\n            usd: e.target.value,\r\n            byn: Math.trunc(e.target.value * 100 * data.prorate) /100,\r\n        })\r\n    }\r\n    const BuyChange = (e) => {\r\n        if (e.target.checked===false) {\r\n            setData({...data,buy:e.target.checked, usd:0, byn:0})\r\n        } else {\r\n            setData({...data,buy:e.target.checked})\r\n        }\r\n        \r\n    }\r\n    const setDate = (e) => {\r\n        const dateNow = new Date();\r\n        console.log(dateNow);\r\n        setData({\r\n            ...data,\r\n            date: dateNow\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"MyForm\">\r\n            <input type=\"number\" onChange={RateChange} onClick={setDate}/>\r\n            <input type=\"number\" onChange={ProrateChange} />\r\n            <div>\r\n                <input type=\"checkbox\" onChange={BuyChange}/> buy?\r\n            </div>\r\n            <input type=\"number\" disabled={!data.buy} value={data.usd} onChange={USDChange}/>\r\n            \r\n            <button onClick={()=>props.action(data)}>\r\n                Отправить\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\nimport { MdTrendingUp, MdTrendingDown, MdMoneyOff, MdAttachMoney } from \"react-icons/md\";\r\nimport { BiMessageSquareCheck, BiMessageSquareX } from \"react-icons/bi\";\r\n\r\n\r\n\r\nfunction Table({data}) {\r\n    var sum = 0;\r\n    data.map(arr => {\r\n        if(arr.buy === true) {\r\n            sum = sum + arr.usd\r\n        }\r\n    })\r\n    return (\r\n        <div className='table'>\r\n            <div className='row'>\r\n                <div className='column'>Купленно <MdAttachMoney/>\r\n                    {sum}\r\n                </div>\r\n            </div>\r\n            {data.map(\r\n                (arr, i)=>{\r\n                    return (\r\n                        <div className='row' key={i}>\r\n                            <div className='column'>{i+1})</div>\r\n                            <div className='column date'>{arr.date}</div>\r\n                            <div className='column'>{arr.increase ? <MdTrendingUp color={'#f44336'} size={'20px'}/> : <MdTrendingDown color={'#4CAF50'} size={'20px'}/>}</div>\r\n                            <div className='column'>{arr.prorate}</div>\r\n                            {arr.buy? <div className='column not-buy'><BiMessageSquareCheck color={'inherit'} size={'20px'}/></div> : <div className='column buy'><BiMessageSquareX color={'inherit'} size={'20px'}/></div>}\r\n                            {arr.buy ? <div className='column'><MdAttachMoney/> {arr.usd}</div> : <div className='column'><MdMoneyOff color={'#f44336'}/></div>}\r\n                            <div className='column byn'>{arr.buy ? arr.byn : <MdMoneyOff color={'#f44336'}/>}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n            )}\r\n        </div>\r\n    )\r\n}\r\nexport default Table;","// const URL = 'http://localhost:5000'\r\nconst URL = 'https://astatx.herokuapp.com'\r\nexport const setStat = (stat) => ({\r\n    type: 'GET_STAT',\r\n    payload: stat\r\n});\r\nexport const addStat = (stat) => ({\r\n    type: 'ADD_STAT',\r\n    payload: stat\r\n});\r\nexport const getStat = () => dispatch => {\r\n    console.log('dddd');\r\n    fetch(URL+'/stat').then(( data ) => {\r\n        console.log(data);\r\n        return data.json()\r\n    }).then(data => {\r\n      dispatch(setStat(data))\r\n    })\r\n  }\r\nexport const fetchStats  = (newStat) => dispatch => {\r\n    fetch(URL+'/stat', {\r\n        method: 'PUT', // *GET, POST, , DELETE, etc.\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(newStat)\r\n      }).then(res => {return res.json()})\r\n      .then(data => {\r\n        console.log(data);\r\n        dispatch(addStat(data))\r\n      }); \r\n    }\r\n\r\nconst Actions = {\r\n    getStat: () => dispatch => {\r\n        console.log('dddd');\r\n        fetch(URL+'/stat').then(( data ) => {\r\n            console.log(data);\r\n            return data.json()\r\n            \r\n        }).then(data => dispatch(Actions.setStat(data)))\r\n      },\r\n      setStat : (stat) => ({\r\n        type: 'GET_STAT',\r\n        payload: stat\r\n    })\r\n}\r\nexport default Actions;","import React, {useEffect} from 'react';\r\nimport Form from './component/Form';\r\nimport Table from './component/Table';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from \"redux\";\r\nimport * as statActions  from '../src/redux/actions/stat';\r\nimport orderBy from \"lodash/orderBy\";\r\nimport './App.css';\r\nimport {\r\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\r\n} from 'recharts';\r\n\r\n\r\nconst sortBy = (element, type) => {\r\n  \r\n  \r\n  return orderBy(element, 'date', 'asc');\r\n}\r\n\r\nfunction App(props) {\r\nuseEffect(() => {\r\n  props.getStat()\r\n},[]);\r\nconst lastElement = props.statistic.length > 0 ? props.statistic[props.statistic.length-1] : {prorate: 0}\r\nconsole.log(lastElement.prorate);\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <LineChart\r\n        width={document.documentElement.clientWidth-50}\r\n        height={600}\r\n        data={props.statistic}\r\n        margin={{\r\n          top: 5, right: 30, left: 20, bottom: 5,\r\n        }}\r\n      >\r\n        <CartesianGrid strokeDasharray=\"4 4\" />\r\n        <XAxis dataKey=\"date\"/>\r\n        <YAxis domain={['dataMin', 'dataMax + 0.01']}/>\r\n        <Tooltip />\r\n        <Legend />\r\n        <Line type=\"monotone\" dataKey=\"rate\" stroke=\"#4caf50\" activeDot={{ r: 3 }} dot={{ r: 0.5 }}/>\r\n        <Line type=\"monotone\" dataKey=\"prorate\" stroke=\"#f03226\" activeDot={{ r: 3 }} dot={{ r: 1 }} />\r\n        \r\n      </LineChart>\r\n      <Form action={props.fetchStats} lastRate={lastElement.prorate}/>\r\n      <Table data={props.statistic}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapState = state => ({\r\n  ...state,\r\n  statistic: sortBy(state.statistic)\r\n});\r\n  const mapDispatch = dispatch => ({\r\n    ...bindActionCreators(statActions, dispatch)\r\n    \r\n  });\r\nexport default connect(mapState, mapDispatch)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport store from './redux/store'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}